'''
Oficina Aula 1.3

Durante a aula, você aprendeu a utilizar o módulo datetime e seus tipos para trabalhar com informação de data e hora. Agora é a vez de praticar os seus conhecimentos. Para esta atividade, considere a situação e os dados a seguir.

Seus amigos sabem que você está trabalhando com Python e estão entusiasmados com as possibilidades de aplicações. Um deles é muito esquecido e sugeriu que você fizesse um programa que o alerte quando for o aniversário de alguém do seu grupo de amigos.

Você pediu aos seus amigos que anotassem as datas de seus aniversários em uma lista, conforme está descrito a seguir, mas cada pessoa escreveu de uma forma diferente, então, cabe a você interpretá-la adequadamente:

aniversarios = ['01/02/1990', '22 de Maio de 1991', '04/Abr/1995', '1995-Outubro-10', '12 Julho 1989', '16 de Junho de 1987', '04/07/1990'].

Para isso, o recomendado é criar uma lista de formatos correspondentes e aplicá-la à lista de datas de aniversários. O seu objetivo é criar um programa que converta a lista de datas de tipo string em uma lista de objetos do tipo data e organizá-los por ordem de aniversário no ano. Isso significa que primeiro vem o mês e, em seguida, o dia como critério de ordenação.

Depois, você deve verificar se o dia de hoje é aniversário de alguém. Caso seja, você deve escrever a string “Hoje, (DIA DA SEMANA) (DIA) de (MÊS) de (ANO ATUAL), tem aniversário!”, em que as palavras DIA DA SEMANA, DIA, MÊS e ANO ATUAL devem ser substituídas pelos seus respectivos valores. As informações devem estar escritas em português.
'''

from datetime import date, datetime
import locale

# Define o código da região para o Brasil (idioma português)
locale.setlocale(locale.LC_ALL, 'pt_BR')

# Converte a string para data
def converte_para_data(string_data):
    formatos_datas = ['%d/%m/%Y', '%d de %B de %Y', '%d/%b/%Y', '%Y-%B-%d', '%d %B %Y']
    for formato_data in formatos_datas:
        try:
            valor_data = datetime.strptime(string_data, formato_data).date()
            return valor_data
        except ValueError:
            pass

# Lista com as datas dos aniversários
aniversarios = ['01/02/1990', '22 de Maio de 1991', '04/Abr/1995', '1995-Outubro-10', '12 Julho 1989', '16 de Junho de 1987', '04/07/1990']

# Lista com as strings convertidas para datas
lista_datas = list(map(converte_para_data, aniversarios))

# Data atual
hoje = date.today()

# Linha para teste
#hoje = date(2021, 7, 4)

# Imprime as datas de aniversários e informa se há aniversário(s) no dia atual
print(hoje.strftime("------------- Datas de aniversários - Ano: %Y -------------"))
for lista_data in sorted(lista_datas, key=lambda d: (d.month, d.day)):
    if (lista_data.strftime("%d/%m") == hoje.strftime("%d/%m")):
        print(hoje.strftime("Hoje, %A %d de %B de %Y, tem aniversário!"))    
    else:
        print(lista_data.strftime("%d/%m"))
